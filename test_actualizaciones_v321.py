#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
TEST FINAL - Verificaci√≥n de Actualizaciones v3.2.1
Valida todas las correcciones implementadas
"""

def test_actualizaciones_v321():
    """Test completo de las actualizaciones implementadas"""
    print("üîç TESTING - Actualizaciones v3.2.1")
    print("=" * 60)
    
    try:
        from version_info import get_full_version_info, TEAM_INFO, PROJECT_INFO
        
        # 1. Verificar informaci√≥n del equipo actualizada
        print("\n‚úÖ 1. VERIFICANDO INFORMACI√ìN DEL EQUIPO:")
        print("-" * 40)
        
        expected_roles = ['desarrollador', 'lider_investigacion', 'jefe_gestion_informacion']
        for role in expected_roles:
            if role in TEAM_INFO:
                info = TEAM_INFO[role]
                print(f"‚úÖ {role}:")
                print(f"   Nombre: {info['nombre']}")
                print(f"   Cargo: {info['cargo']}")
                print(f"   Departamento: {info['departamento']}")
                print(f"   Correo: {info['correo']}")
            else:
                print(f"‚ùå {role} NO encontrado")
                return False
        
        # 2. Verificar que no hay informaci√≥n de repositorio
        print("\n‚úÖ 2. VERIFICANDO ELIMINACI√ìN DE REPOSITORIO:")
        print("-" * 40)
        
        if 'repository' not in PROJECT_INFO:
            print("‚úÖ Informaci√≥n del repositorio eliminada correctamente")
        else:
            print("‚ùå Informaci√≥n del repositorio a√∫n presente")
            return False
        
        # 3. Verificar estructura de campos
        print("\n‚úÖ 3. VERIFICANDO ESTRUCTURA DE CAMPOS:")
        print("-" * 40)
        
        for role_key, role_info in TEAM_INFO.items():
            if 'correo' in role_info and 'contacto' not in role_info:
                print(f"‚úÖ {role_key}: Campo 'correo' presente, 'contacto' eliminado")
            else:
                print(f"‚ùå {role_key}: Estructura de campos incorrecta")
                return False
        
        # 4. Verificar informaci√≥n espec√≠fica solicitada
        print("\n‚úÖ 4. VERIFICANDO INFORMACI√ìN ESPEC√çFICA:")
        print("-" * 40)
        
        # Desarrollador
        dev_info = TEAM_INFO['desarrollador']
        if (dev_info['departamento'] == 'Innovaci√≥n y Desarrollo' and
            dev_info['correo'] == 'Pendiente'):
            print("‚úÖ Desarrollador: Informaci√≥n actualizada correctamente")
        else:
            print("‚ùå Desarrollador: Informaci√≥n no actualizada")
            return False
        
        # L√≠der de investigaci√≥n  
        lider_info = TEAM_INFO['lider_investigacion']
        if (lider_info['cargo'] == 'Coordinador del √Årea Cirug√≠a Oncol√≥gica' and
            lider_info['departamento'] == 'Servicio de Oncolog√≠a' and
            lider_info['correo'] == 'Pendiente'):
            print("‚úÖ L√≠der de investigaci√≥n: Informaci√≥n actualizada correctamente")
        else:
            print("‚ùå L√≠der de investigaci√≥n: Informaci√≥n no actualizada")
            return False
        
        # Jefe gesti√≥n informaci√≥n
        jefe_info = TEAM_INFO['jefe_gestion_informacion']  
        if (jefe_info['departamento'] == 'Gesti√≥n de la Informaci√≥n' and
            jefe_info['correo'] == 'Pendiente'):
            print("‚úÖ Jefe gesti√≥n informaci√≥n: Informaci√≥n actualizada correctamente")
        else:
            print("‚ùå Jefe gesti√≥n informaci√≥n: Informaci√≥n no actualizada")
            return False
        
        # 5. Test de integraci√≥n UI
        print("\n‚úÖ 5. VERIFICANDO INTEGRACI√ìN UI:")
        print("-" * 40)
        
        with open('ui.py', 'r', encoding='utf-8') as f:
            ui_content = f.read()
        
        if 'role_info[\'correo\']' in ui_content and 'role_info[\'contacto\']' not in ui_content:
            print("‚úÖ UI: Referencias actualizadas a 'correo'")
        else:
            print("‚ùå UI: Referencias no actualizadas correctamente")
            return False
        
        if 'role_titles' in ui_content:
            print("‚úÖ UI: T√≠tulos de roles implementados")
        else:
            print("‚ùå UI: T√≠tulos de roles no implementados")
            return False
        
        print("\n" + "=" * 60)
        print("üéâ TODOS LOS TESTS PASARON - Actualizaciones v3.2.1 completas")
        print("=" * 60)
        
        # Resumen final
        print("\nüìä RESUMEN DE ACTUALIZACIONES:")
        print("‚úÖ Informaci√≥n del equipo actualizada")
        print("‚úÖ Repositorio eliminado")
        print("‚úÖ Campos contacto ‚Üí correo")
        print("‚úÖ Departamentos actualizados")
        print("‚úÖ Correos marcados como 'Pendiente'")
        print("‚úÖ UI sincronizada correctamente")
        print("‚úÖ T√≠tulos con iconos implementados")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ERROR durante el test: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    import sys
    success = test_actualizaciones_v321()
    sys.exit(0 if success else 1)